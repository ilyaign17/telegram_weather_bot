import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, filters, MessageHandler
from telegram import ReplyKeyboardMarkup, KeyboardButton

from .weather import fetch_weather, pretty_weather
from .config import settings  # –±–µ—Ä–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
from .db import init_db, add_favorite, remove_favorite, list_favorites



# 1) –ù–∞—Å—Ç—Ä–æ–∏–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ/–æ—à–∏–±–∫–∞—Ö
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO,
)
logger = logging.getLogger(__name__)

# 2) –û–±—â–∏–π —Ç–µ–∫—Å—Ç –ø–æ–º–æ—â–∏ (—É–¥–æ–±–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å –≤ –æ–¥–Ω–æ–π –∫–æ–Ω—Å—Ç–∞–Ω—Ç–µ)
HELP = (
    "–Ø –±–æ—Ç –ø–æ–≥–æ–¥—ã (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ). –ö–æ–º–∞–Ω–¥—ã:\n"
    "/start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n"
    "/help ‚Äî –ø–æ–º–æ—â—å\n"
    "/weather {–≥–æ—Ä–æ–¥} ‚Äî –ø–æ–≥–æ–¥–∞ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ\n"
    "–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π –≥–æ—Ä–æ–¥ –≤ –≤–∏–¥–µ —Å–æ–æ–±—â–µ–Ω–∏—è"
)

FAV_BUTTON_TEXT = "‚≠ê –ò–∑–±—Ä–∞–Ω–Ω–æ–µ"

MAIN_KB = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(FAV_BUTTON_TEXT)],  # –æ–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞ –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ
    ],
    resize_keyboard=True,   # –ø–æ–¥–≥–æ–Ω—è—Ç—å –ø–æ–¥ —ç–∫—Ä–∞–Ω
    one_time_keyboard=False # –æ—Å—Ç–∞–≤–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å—Ç–æ—è–Ω–Ω–æ
)


# 3) –•–µ–Ω–¥–ª–µ—Ä—ã –∫–æ–º–∞–Ω–¥ (PTB v21 —Ç—Ä–µ–±—É–µ—Ç async-—Ñ—É–Ω–∫—Ü–∏–∏)
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! " + HELP,
        reply_markup=MAIN_KB
    )

async def help_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(HELP)

async def weather_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /weather <–≥–æ—Ä–æ–¥>.
    –ü—Ä–∏–º–µ—Ä: /weather –ú–æ—Å–∫–≤–∞
    """
    # 1) –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–¥–∞–ª –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    if not context.args:
        await update.message.reply_text("–£–∫–∞–∂–∏ –≥–æ—Ä–æ–¥: /weather <–≥–æ—Ä–æ–¥>")
        return

    # 2) –°–æ–±–∏—Ä–∞–µ–º –≥–æ—Ä–æ–¥ –∏–∑ —Å–ª–æ–≤ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã (–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –º–Ω–æ–≥–æ—Å–ª–æ–≤–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π)
    city = " ".join(context.args).strip()

    # 3) –í—ã–∑—ã–≤–∞–µ–º OpenWeather (–∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ) –∏ –ø–æ–ª—É—á–∞–µ–º JSON –∏–ª–∏ None
    data = await fetch_weather(city)

    # 4) –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–µ—É—Å–ø–µ—Ö: —Å–µ—Ç—å/–≥–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω/–æ—à–∏–±–∫–∞ –∫–ª—é—á–∞ –∏ —Ç.–ø.
    if not data:
        await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–≥–æ–¥—É –¥–ª—è —ç—Ç–æ–≥–æ –≥–æ—Ä–æ–¥–∞ üòï")
        return

    # 5) –ü—Ä–µ–≤—Ä–∞—â–∞–µ–º JSON –≤ –∫—Ä–∞—Å–∏–≤—ã–π —Ç–µ–∫—Å—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
    text = pretty_weather(data)
    await update.message.reply_text(text)

async def text_city(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞–ª –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç (–Ω–µ –∫–æ–º–∞–Ω–¥—É),
    —Å—á–∏—Ç–∞–µ–º —ç—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≥–æ—Ä–æ–¥–∞ –∏ –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É.
    """
    if not update.message or not update.message.text:
        return

    city = update.message.text.strip()
    # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏—Ö/–ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    if not city or city.startswith("/") or len(city) < 2:
        return

    # –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –Ω–∞—à–∞ –∫–Ω–æ–ø–∫–∞ ‚Äî —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç /fav
    if city == FAV_BUTTON_TEXT:
        # –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–≥–∏–∫—É fav_cmd
        return await fav_cmd(update, context)


    data = await fetch_weather(city)
    if not data:
        await update.message.reply_text("–ù–µ –Ω–∞—à—ë–ª —Ç–∞–∫–æ–π –≥–æ—Ä–æ–¥. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.")
        return

    await update.message.reply_text(pretty_weather(data))

async def add_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    /add <–≥–æ—Ä–æ–¥> ‚Äî –¥–æ–±–∞–≤–ª—è–µ—Ç –≥–æ—Ä–æ–¥ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    if not context.args:
        await update.message.reply_text("–£–∫–∞–∂–∏ –≥–æ—Ä–æ–¥: /add <–≥–æ—Ä–æ–¥>")
        return

    city = " ".join(context.args).strip()
    ok = add_favorite(update.effective_user.id, city)
    if ok:
        await update.message.reply_text(f"‚úÖ –î–æ–±–∞–≤–∏–ª {city} –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ")
    else:
        await update.message.reply_text("‚ö†Ô∏è –£–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º –∏–ª–∏ –æ—à–∏–±–∫–∞ –≤–≤–æ–¥–∞")

async def remove_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    /remove <–≥–æ—Ä–æ–¥> ‚Äî —É–¥–∞–ª—è–µ—Ç –≥–æ—Ä–æ–¥ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ.
    """
    if not context.args:
        await update.message.reply_text("–£–∫–∞–∂–∏ –≥–æ—Ä–æ–¥: /remove <–≥–æ—Ä–æ–¥>")
        return

    city = " ".join(context.args).strip()
    ok = remove_favorite(update.effective_user.id, city)
    if ok:
        await update.message.reply_text(f"üóë –£–¥–∞–ª–∏–ª {city} –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ")
    else:
        await update.message.reply_text("‚ö†Ô∏è –¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ—Ç –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º")

async def list_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    /list ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –≥–æ—Ä–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    favs = list_favorites(update.effective_user.id)
    if not favs:
        await update.message.reply_text("‚≠ê –ü–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö. –î–æ–±–∞–≤—å: /add <–≥–æ—Ä–æ–¥>")
        return

    text = "‚≠ê –ò–∑–±—Ä–∞–Ω–Ω—ã–µ –≥–æ—Ä–æ–¥–∞:\n" + "\n".join(f"‚Ä¢ {c}" for c in favs)
    await update.message.reply_text(text)

async def fav_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    /fav ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–≥–æ–¥—É –ø–æ –≤—Å–µ–º –∏–∑–±—Ä–∞–Ω–Ω—ã–º –≥–æ—Ä–æ–¥–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    user_id = update.effective_user.id
    favs = list_favorites(user_id)

    if not favs:
        await update.message.reply_text("‚≠ê –ü–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö. –î–æ–±–∞–≤—å: /add <–≥–æ—Ä–æ–¥>")
        return

    lines = ["‚≠ê –ü–æ–≥–æ–¥–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö:"]
    # –ò–¥—ë–º –ø–æ –≥–æ—Ä–æ–¥–∞–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ (–ø—Ä–æ—Å—Ç–æ –∏ –Ω–∞–¥—ë–∂–Ω–æ)
    for city in favs:
        data = await fetch_weather(city)
        if not data:
            lines.append(f"\n‚Ä¢ {city}\n  (–Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ)")
            continue
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º pretty_weather –∏ —á—É—Ç—å-—á—É—Ç—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º
        text = pretty_weather(data)
        # –ß—Ç–æ–±—ã –¥–µ–ª–∞—Ç—å –∫–æ–º–ø–∞–∫—Ç–Ω–µ–µ, –∑–∞–º–µ–Ω–∏–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É "üåç {name}" –Ω–∞ "‚Ä¢ {name}"
        first_line, *rest = text.splitlines()
        name = first_line.replace("üåç", "‚Ä¢").strip()
        lines.append("\n" + name)
        for r in rest:
            lines.append(r)

    # Telegram –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ ~4096 —Å–∏–º–≤–æ–ª–∞–º–∏ ‚Äî –Ω–∞ –Ω–∞—à –æ–±—ä—ë–º —Ö–≤–∞—Ç–∏—Ç.
    await update.message.reply_text("\n".join(lines))


async def on_startup(app):
    # —Å–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—ã, –µ—Å–ª–∏ –∏—Ö –µ—â—ë –Ω–µ—Ç
    init_db()

# 4) –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞: —Å–æ–±–∏—Ä–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º long polling
def main():
    # –ó–∞—â–∏—Ç–∞ –æ—Ç –∑–∞–±—ã–≤—á–∏–≤–æ—Å—Ç–∏: –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ –∑–∞–ø—É—Å–∫–∞—Ç—å –Ω–µ–ª—å–∑—è
    if not settings.telegram_token:
        raise RuntimeError("TELEGRAM_BOT_TOKEN –ø—É—Å—Ç. –ó–∞–ø–æ–ª–Ω–∏ .env!")

    # Application ‚Äî ¬´–¥–≤–∏–∂–æ–∫¬ª –±–æ—Ç–∞
    app = ApplicationBuilder().token(settings.telegram_token).build()
    app.post_init = on_startup

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã ‚Üí –≥–æ–≤–æ—Ä–∏–º PTB, –∫–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã–∑—ã–≤–∞—Ç—å
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_cmd))
    app.add_handler(CommandHandler("weather", weather_cmd))

    app.add_handler(CommandHandler("add", add_cmd))
    app.add_handler(CommandHandler("remove", remove_cmd))
    app.add_handler(CommandHandler("list", list_cmd))
    app.add_handler(CommandHandler("fav", fav_cmd))

    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, text_city))

    logger.info("Bot starting (long polling)...")
    # long polling = —Ä–µ–≥—É–ª—è—Ä–Ω–æ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º —É Telegram ¬´–µ—Å—Ç—å –ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è¬ª
    app.run_polling(drop_pending_updates=True)
    # drop_pending_updates=True ‚Äî –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å—Ç–∞—Ä—É—é –æ—á–µ—Ä–µ–¥—å –∞–ø–¥–µ–π—Ç–æ–≤ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Å—Ç–∞—Ä—Ç–µ

# –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å ¬´python -m src.bot¬ª
if __name__ == "__main__":
    main()
